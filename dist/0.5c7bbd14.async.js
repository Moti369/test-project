webpackJsonp([0],{BerQ:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var r=t("Z60a"),l=t.n(r),o=t("j/rp"),u=t.n(o),a=t("C9uT"),c=t.n(a),i=t("T/v0"),s=t.n(i),p=t("tNLN"),f=t.n(p),v=t("U7vG"),b=(t.n(v),t("H0LS")),d=function(e){function n(){var e;return l()(this,n),e=s()(this,f()(n).apply(this,arguments)),e.state={},e}return c()(n,[{key:"render",value:function(){return v.createElement("div",{className:b.box},v.createElement("h2",null,"hello world"),v.createElement("h1",null,"\u8fd9\u662f\u4e00\u4e2aweb \u524d\u7aef\u7684\u57fa\u7840\u9879\u76ee"))}}]),u()(n,e),n}(v.Component);n.default=d},H0LS:function(e,n){e.exports={box:"box___2B0-a"}}});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,